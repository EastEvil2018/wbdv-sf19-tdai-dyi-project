CLEARDB_DATABASE_URL: mysql://b06c060ec2bca2:293c3a9c@us-cdbr-iron-east-02.cleardb.net/heroku_d9e99589485af27?reconnect=true

DBHOSTNAME: us-cdbr-iron-east-02.cleardb.net
DBPASSWORD: 

While logged In as User (Alice/alice), 
First, you should see the home page, the home has three parts, the top is the recommended content for some album.
You can click on one of them and then jump into detail page for the album.
The second part is the recently comments, this is dynamically generated by the database for recently comments user commented, you can click on the user to see their profile or click on the product (e.g, album, artist or track) to see their details.
The bottom part is your playlists, anonymous user will not see this part, you can create or delete the playlist or click on one of them to see the playlist detail.
The header bar has Home buttom (e.g, the logo and the name of our website), search button (you can click to jump onto search page), the user profile link (you can click to jump onto profile page) and the logout button (you can click to logout as anonymous user), for anonymouse user, there will be logIn and logOut button.
When you click on to the profile page, you could see your or others' profile, there will be follows, followers, likes, comments, playlists link for all users, and if you are loggedIn, you will see a follow/unfollow button in the profile tab, and if you are viewing your own profile, you will see the setting link to help you update your profile.
For all the links in profile page, you could click on one of them and exactly see the content display under the profile tab, and click on one of the follows/followers will jump into their profile page, and click on one of the product in likes/comments will jump into the details page.
When click on the search button on the header tab, you will redirect to the search page, you have 3 types to search, they are album, track and artist, you will see 20 results listed by your keyword when you click search button, click one of them will get into the detail page.
On detail page, for album, you can see the name, artist, album, release date and a small widget of preview, for artist you can see the name, profile, all the albums and a preview widget, for album, you can see the name, profile, artist, tracks, release date and s preview widget.
For the track detail page, if you are a loggedIn user, you can add the track to your playlist, and for all the details page, you can like/unlike the product and see all the users which liked this product and all the comments for this product, and also you can comment on the product if you are loggedIn.

If you are an ADMIN user, you will have access to delete all user's comments and all product' comments in detail, home and profile page.

Domain Objects (all objects have id attribute):
User:
username, password, firstName, lastName, role(USER/ADMIN), intro and profilePhoto.
One user can follow many users, and one user can also be followed by many users.
Artist(In remote API):
name, album, image (profile).
One user can like/comment many artists, and one artist can be liked/commented by many users.
Album(In remote API):
name, profile, artists, tracks, release_date.
One user can like/comment many albums, and one album can be liked/commented by many users.
Track(In remote API):
name, artists, album, release_date.
One user can like/comment many tracks, and one track can be liked/commented by many users.
Track(In local):
name, spotifyId.
One playlist can have many tracks, and one track can be added to many playlists.
PlayList:
name, userId, tracks.
One playlist can have many tracks, and one track can be added to many playlists.
One user can have many playlists, and one playlist have only one user.
Comment:
user, productId, productType, productName, content, create_date.
One user can have many comments, and one comment has only one user.
One product (e.g, album, track or artist from remote API) can have many comments, and one comment has only one product.
Favorite:
user, productId, productType, productName, create_date.
One user can have many favorites, and one favorite has only one user.
One product (e.g, album, track or artist from remote API) can have many favorites, and one favorite has only one product.

